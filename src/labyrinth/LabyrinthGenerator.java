package labyrinth;

public class LabyrinthGenerator {

	static Labyrinth labyrinth;

	public static Labyrinth loadLab(int labID) {

		if (labID == 1) {

			int[] start = new int[2];
			start[0] = 0;
			start[1] = 3;

			int[] ende = new int[2];
			ende[0] = 11;
			ende[1] = 2;

			char[][] lab = { // Labyrinth definieren
					{ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0' },
					{ '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '0' },
					{ '0', '1', '0', '0', '0', '1', '0', '0', '0', '0', '1', '1' },
					{ '1', '1', '0', '1', '1', '1', '0', '1', '0', '1', '1', '0' },
					{ '0', '1', '1', '1', '0', '0', '0', '1', '0', '0', '1', '0' },
					{ '0', '0', '1', '1', '0', '1', '0', '1', '1', '0', '1', '0' },
					{ '0', '1', '1', '1', '1', '1', '0', '0', '1', '1', '1', '0' },
					{ '0', '1', '0', '0', '0', '1', '1', '0', '1', '1', '0', '0' },
					{ '0', '1', '1', '1', '0', '1', '0', '0', '0', '1', '1', '0' },
					{ '0', '0', '0', '1', '1', '1', '1', '1', '0', '1', '0', '0' },
					{ '0', '1', '1', '1', '0', '1', '0', '1', '1', '1', '1', '0' },
					{ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0' } };

			labyrinth = new Labyrinth(lab, start, ende, labID);} else if (labID == 2) {

			int[] start = new int[2];start[0] = 0;
			start[1] = 3;

			int[] ende = new int[2];		ende[0] = 11;
			ende[1] = 2;

			char[][] lab = { // Labyrinth definieren
					{ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0' },
					{ '0', '0', '0', '1', '0', '0', '1', '1', '0', '0', '0', '0' },
					{ '0', '0', '0', '1', '1', '0', '1', '0', '0', '1', '1', '1' },
					{ '1', '1', '1', '0', '1', '0', '1', '1', '1', '1', '0', '0' },
					{ '0', '0', '1', '0', '1', '0', '1', '0', '0', '0', '0', '0' },
					{ '0', '0', '1', '1', '1', '0', '1', '0', '0', '0', '0', '0' },
					{ '0', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', '0' },
					{ '0', '0', '0', '1', '1', '0', '1', '0', '1', '0', '1', '0' },
					{ '0', '1', '1', '1', '0', '0', '0', '0', '1', '1', '1', '0' },
					{ '0', '1', '0', '1', '1', '1', '1', '0', '1', '0', '1', '0' },
					{ '0', '1', '1', '0', '0', '0', '1', '1', '1', '0', '0', '0' },
					{ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0' } };

			labyrinth = new Labyrinth(lab, start, ende, labID);
		}
		return labyrinth;
	}

}
